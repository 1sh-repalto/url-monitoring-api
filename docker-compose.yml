services:
  api:
    build: .
    container_name: url_monitoring_api
    ports: 
      - "3000:3000"
    networks:
      - monitor-net
    env_file:
      - ".env.prod"
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: urlmonitor
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - monitor-net

  migrate:
    image: migrate/migrate
    depends_on:
      - postgres
    volumes:
      - ./migrations:/migrations
    entrypoint: >
      /bin/sh -c "
        sleep 5 &&
        migrate -path=/migrations -database=postgres://postgres:postgres@postgres:5432/urlmonitor?sslmode=disable up ||
        echo 'Migration already applied or failed'
      "
    networks: 
      - monitor-net


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3030:3000"
    networks:
      - monitor-net
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
  
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - "monitor-net"

volumes:
  pgdata:
  grafana-storage:

networks:
  monitor-net:
